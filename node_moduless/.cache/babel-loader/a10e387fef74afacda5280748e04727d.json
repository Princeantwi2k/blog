{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Augustine\\\\Desktop\\\\reactjs-practicals\\\\blog\\\\src\\\\Tv\\\\Projectors.jsx\";\nimport React from \"react\";\nimport Tvs from \"./Tvs\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Projectors = props => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: props.projectors.map((projectors, id) => /*#__PURE__*/_jsxDEV(Link, {\n      to: `/blogs/${projectors.id}`,\n      children: /*#__PURE__*/_jsxDEV(Tvs, {\n        projectors: projectors\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n};\n\n_c = Projectors;\nexport default Projectors;\n\nvar _c;\n\n$RefreshReg$(_c, \"Projectors\");","map":{"version":3,"sources":["C:/Users/Augustine/Desktop/reactjs-practicals/blog/src/Tv/Projectors.jsx"],"names":["React","Tvs","Link","Projectors","props","projectors","map","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SAASC,IAAT,QAAqB,kBAArB;;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC5B,sBACE;AAAA,cACGA,KAAK,CAACC,UAAN,CAAiBC,GAAjB,CAAqB,CAACD,UAAD,EAAaE,EAAb,kBACpB,QAAC,IAAD;AAAM,MAAA,EAAE,EAAG,UAASF,UAAU,CAACE,EAAG,EAAlC;AAAA,6BACE,QAAC,GAAD;AAAc,QAAA,UAAU,EAAEF;AAA1B,SAAUE,EAAV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADD;AADH,mBADF;AASD,CAVD;;KAAMJ,U;AAYN,eAAeA,UAAf","sourcesContent":["import React from \"react\";\r\nimport Tvs from \"./Tvs\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Projectors = (props) => {\r\n  return (\r\n    <>\r\n      {props.projectors.map((projectors, id) => (\r\n        <Link to={`/blogs/${projectors.id}`}>\r\n          <Tvs key={id} projectors={projectors} />\r\n        </Link>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Projectors;\r\n"]},"metadata":{},"sourceType":"module"}